function[BuyorSell]= TradingStrategyChange(Signal,threshold,type)             % INPUT             % Signal = times series vector of specified signal             % threshold = scalar 1x1 threshold for trading signals             % type = scalar 1x1 indicating which strategy used to determine buy or sell             triggers             % OUTPUT             % BuyorSell is a colomn vector of buy (1) or sell (-1) triggers             if type==1                 BuyorSell = [];                 for i = 1:length(Signal)                     if Signal(i,:) > threshold % means long                         BuyorSell(i,:) = 1;else                          BuyorSell(i,:) = -1; % means short                     endend              elseif type==2                 BuyorSell = [];                 for i = 1:length(Signal)-1                     if (Signal(i,:)>threshold) && (Signal(i+1,:)>threshold) % meanslong end end elseif type==3    BuyorSell = [];    for i = 1:length(Signal)-2        if (Signal(i,:)>threshold) && (Signal(i+1,:)>threshold) &&(Signal(i+2,:)>threshold)% means long            BuyorSell(i+2,:) = 1;else end end elseif type==4    BuyorSell = [];    for i = 1:length(Signal)-3        if (Signal(i,:)>threshold) && (Signal(i+1,:)>threshold) &&(Signal(i+2,:)>threshold) && (Signal(i+3,:)>threshold)% means long            BuyorSell(i+3,:) = 1;else end end end end     BuyorSell(i+1,:) = 1;else BuyorSell(i+1,:) = -1;BuyorSell(i+2,:) = -1;BuyorSell(i+3,:) = -1;function[BuyorSell]=TradingStrategyAbsolute(Signal,MovAvgLag,bandwidth,type)% INPUT% Signal = times series vector of specified signal% MovAvgLag = timelag for the moving average calculation% bandwith = scalar 1x1 upper threshold for trading signals% type = scalar 1x1 indicating which strategy used to determine buy or selltriggers% OUTPUT% BuyorSell is a colomn vector of buy (1) or sell (-1) triggersif type==1    BuyorSell = [];    MovAvg = tsmovavg(Signal,'s',MovAvgLag,1);    for i = 1:length(Signal)-(MovAvgLag-1)long if Signal(i+(MovAvgLag-1),:) > MovAvg(i+(MovAvgLag-1),:) % means    BuyorSell(i+(MovAvgLag-1),:) = 1;else % means long    BuyorSell(i+(MovAvgLag-1),:) = -1;end end elseif type==2    BuyorSell = [];    MovAvg = tsmovavg(Signal,'s',MovAvgLag,1);    MovStd = movstd(Signal,MovAvgLag);    for i = 1:length(Signal)-(MovAvgLag-1)        if Signal(i+(MovAvgLag-1),:) < MovAvg(i+(MovAvgLag-1),:)-bandwidth*(MovStd(i+(MovAvgLag-1),:)) % lower band            BuyorSell(i+(MovAvgLag-1),:) = 1;        elseif Signal(i+(MovAvgLag-1),:) > MovAvg(i+(MovAvgLag-1),:)+bandwidth*(MovStd(i+(MovAvgLag-1),:)) % upper band             BuyorSell(i+(MovAvgLag-1),:) = -1;else end end     % fill -9 with previous values    while any(BuyorSell(:)==-9)        ii1=BuyorSell==-9;        ii2=circshift(ii1,[-1 0]);        BuyorSell(ii1)=BuyorSell(ii2); % final Buy or Sell Vectorend end end BuyorSell(i+(MovAvgLag-1),:) = -9;